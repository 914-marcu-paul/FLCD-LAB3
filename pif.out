boolean -> (-1, -1)
id -> (4, 0)
( -> (-1, -1)






integer -> (-1, -1)
id -> (8, 0)
) -> (-1, -1)
{ -> (-1, -1)
cond -> (-1, -1)
( -> (-1, -1)
id -> (8, 0)
== -> (-1, -1)
const -> (0, 0)
id -> (8, 0)
== -> (-1, -1)
const -> (6, 0)
) -> (-1, -1)
then -> (-1, -1)
{ -> (-1, -1)
send -> (-1, -1)
FALSE -> (-1, -1)
; -> (-1, -1)
} -> (-1, -1)
elsecond -> (-1, -1)
( -> (-1, -1)
id -> (8, 0)
!! -> (-1, -1)
const -> (12, 0)
id -> (8, 0)
%% -> (-1, -1)
const -> (12, 0)
== -> (-1, -1)
const -> (0, 0)
) -> (-1, -1)
then -> (-1, -1)
{ -> (-1, -1)
send -> (-1, -1)
FALSE -> (-1, -1)
; -> (-1, -1)
} -> (-1, -1)
else -> (-1, -1)
{ -> (-1, -1)
traverse -> (-1, -1)
( -> (-1, -1)
integer -> (-1, -1)
id -> (15, 0)
= -> (-1, -1)
const -> (1, 0)
, -> (-1, -1)
id -> (15, 0)
^^ -> (-1, -1)
<= -> (-1, -1)
id -> (8, 0)
, -> (-1, -1)
+++ -> (-1, -1)
id -> (15, 0)
) -> (-1, -1)
{ -> (-1, -1)
cond -> (-1, -1)
( -> (-1, -1)
id -> (8, 0)
%% -> (-1, -1)
id -> (15, 0)
== -> (-1, -1)
const -> (0, 0)
) -> (-1, -1)
then -> (-1, -1)
{ -> (-1, -1)
send -> (-1, -1)
FALSE -> (-1, -1)
; -> (-1, -1)
} -> (-1, -1)
} -> (-1, -1)
} -> (-1, -1)
send -> (-1, -1)
TRUE -> (-1, -1)
; -> (-1, -1)
} -> (-1, -1)
integer -> (-1, -1)
id -> (0, 1)
( -> (-1, -1)
) -> (-1, -1)
{ -> (-1, -1)
integer -> (-1, -1)
id -> (2, 0)
= -> (-1, -1)
const -> (0, 0)
; -> (-1, -1)
runtimeInput -> (-1, -1)
( -> (-1, -1)
id -> (2, 0)
, -> (-1, -1)
integer -> (-1, -1)
) -> (-1, -1)
; -> (-1, -1)
runtimeOutput -> (-1, -1)
( -> (-1, -1)
id -> (4, 0)
( -> (-1, -1)
id -> (2, 0)
) -> (-1, -1)
) -> (-1, -1)
; -> (-1, -1)
send -> (-1, -1)
const -> (0, 0)
; -> (-1, -1)
} -> (-1, -1)
